git
1. git init																			 /* to initialize th file as a git repository*/
2a. git add user.name "username" 										/*to add username to git repository*/
2b. git add user.eamil="usermail"									   /* to add user email to git repository*/
3. git status																	  /* to check for if any changes that had happen after previous commit */
4. git add ./-a																	 /* to add file in stagging area */
5. git commit -m "commit message"								/* to commit the changes made in file into git repository*/
6. git rm -f <filename>                                                   /* to delete file forcefully even if its in stagging area*/
7. git rm --cached <filename>                                        /* to untract a fille from git  */
8. git mv <old file name> <new file name>                    /* ti change file name*/
9. git log                                                                    /*to show all commits*/
10. git diff                                                                 /*to show the difference betwwen working tree and commit files*/   
11. git log --pretty=oneline                                         /* to see all commit list in oneline*/
12. git log --pretty=short                                          /*to see all commits in short*/
13. git log --since= 2.days/weeks/months                /*fo veiwing the commits in last 2 days/weeks/month*/
14. git log --pretty=format:"%h -- %an"                   /*to show the hash and name of author in formatted style */ 
15. git commit --amend                                        /*to amend commits*/
16. git restore --staged  <file name>                    /*to unstaged the file from stagging*/ 
16a. (for linux)     git reset HEAD <filename>       /*to unstaged the file from stagging*/ 
17. git checkout --<filname>                              /*to undo changes made in files after the previous commit*/ 
18. git checkout -f                                            /* to make my working tree same as the last commit    i.e  all changes will be omited after that commit*/


19. open the github site and signup with your gmail (same you provide to create the git repository)-----> to generate  shs keys   goto setting and search for shs keys
	19a.	ssh-keygen -t ed25519 -C "your_email@example.com"    /*to genrate the key*/
	 19b.		Enter a file in which to save the key (/home/you/.ssh/id_ed25519): [Press enter]          /*just press enter to auto select the path*/
	 19c.     > Enter passphrase (empty for no passphrase): [T ype a passphrase]                        /* either press enter  OR type any any passpharse in the section that you like*/
				> Enter same passphrase again: [Type passphrase again]							            /*again press enter  OR type the same phrase again*/
	 19d.         eval "$(ssh-agent -s)"																			            /* run to Start the ssh-agent in the background */
	 19e.			ssh-add ~/.ssh/id_ed25519                                                                                /*Add your SSH private key to the ssh-agent.*/
	 19f.    	   taill ~/.ssh/id_ed25519.pub                                                                                 /* copy the content after runnig the code   to paste*/
	 19g.       paste the content in shs keys in description section

20. git push origin master -f																								/* to forcefully upload in remote git repository*/
21 git remote 																													/* to check whether the remote repository exist or not*/
22. git config --global alias.x xx                                                                                          /* to set alias/nickname( basically for own use) name for any git code as for example: force---> f ,status-->st */
23 git checkout -b  <name>																							 /* to create a new branch by the name given and to go into that branch */
24. git checkout master/branchname																				/* to toggel between master and branch */
25. git branch 																												/* to list the name of all branches */
26. git merge <branch name>																							/* to merge branch with master*/








x. git rm -rf                                            /*remove git repository*/